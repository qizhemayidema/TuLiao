<?php

namespace app\index\controller;

use app\common\controller\Upload;
use app\common\model\Article as ArticleModel;
use app\common\model\BothStatus;
use app\common\model\User as UserModel;
use app\common\typeCode\ForumCate as ForumCateController;
use app\common\model\Category;
use app\common\model\Comment as CommentModel;
use app\common\model\UserHistory as HistoryModel;
use think\Controller;
use think\facade\Session;
use think\Request;
use think\Validate;


class Forum extends Base
{
    public $page_length = 10;

    public $comment_length = 5;

    public $cate;       //分类

    public $forum;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        if (\think\facade\Request::isGet()){

            //社区分类
            $this->forum = (new \app\common\typeCode\Forum());


            $fc = new ForumCateController();
            $this->cate = (new Category())->getList($fc->cacheName,$fc->cateType);

            //查询行业大咖
            $profession_user = (new UserModel())->where(['is_auth'=>3])->order('forum_article_sum','desc')
                ->limit(5)->select();

            //右侧第二栏
            if (isset($this->cate[0]['id'])){
                $right_two = (new ArticleModel())->allowData()->field('id,title')->where(['type'=>$this->forum->articleType])
                    ->where(['cate_id'=>$this->cate[0]['id']])->order('id','desc')->limit(10)->select()->toArray();
            }else{
                $right_two = [];
            }

            $this->assign('pro_user',$profession_user);
            $this->assign('right_two',$right_two);
            $this->assign('cate',$this->cate);
        }
    }


    public function index(Request $request)
    {
        $cate_id = $request->param('cate_id') ?? 0;

        //社区分类
        $forum = (new \app\common\typeCode\Forum());

        $cate = $this->cate;

        if (!$cate_id)$cate_id =  $cate[0]['id'] ?? 0;

        if (Session::has(config('app.index_user_session_path'))){
            $history_left_join_on = 'article.id = history.object_id and history.type = 1 and history.user_id = '.$this->userInfo->id;
        }else{
            $history_left_join_on = 'article.id = history.object_id and history.type = 1';
        }
        $article = (new ArticleModel())
            ->allowData('article')->alias('article')
            ->join('user user','article.author_id = user.id')
            ->leftJoin('user_history history',$history_left_join_on)
            ->where(['article.type'=>$forum->articleType])
            ->order('id','desc')
            ->where(['article.cate_id'=>$cate_id])
            ->field('article.*,user.nickname,user.id user_id,user.avatar_url')
            ->field('history.create_time is_like')
            ->paginate($this->page_length,false,['query' => request()->param()]);

        //相关链接
        $about_link = (new ArticleModel())->allowData()->field('id,click,title')
            ->where(['type'=>$forum->articleType])
            ->order('id','desc')
            ->limit(5)->select();

        $this->assign('article',$article);
        $this->assign('cate_id',$cate_id);
        $this->assign('about_link',$about_link);
        return $this->fetch();
    }

    public function info(Request $request)
    {
        $id  = $request->param('id');
        $article = (new ArticleModel())->allowData()->where(['type'=>$this->forum->articleType])
            ->find($id);

        //是否点赞
        if (Session::has(config('app.index_user_session_path'))){
            $is_like = (new HistoryModel())->where(['type'=>1,'user_id'=>$this->userInfo->id,'object_id'=>$id])->find() ?? false;
        }else{
            $is_like = false;
        }


        //查询评论
        $comment = (new CommentModel())->allowData()->where(['type'=>$this->forum->commentType])->paginate($this->comment_length);

        if($article) $article->setInc('click');

        $this->assign('article',$article);
        $this->assign('comment',$comment);
        $this->assign('comment_floor_start',$comment->currentPage() * $this->comment_length - $this->comment_length);
        $this->assign('is_like',$is_like);
        $this->assign('id',$id);

        return $this->fetch();
    }

    public function user(Request $request)
    {
        $id = $request->param('id');

        $cate = $request->param('cate') ?? 1;
        if (!in_array($cate,[1,2,3]))$cate = 1;

        $user = (new UserModel())->where(['id'=>$id])->find();

        $bothStatus = new BothStatus();
        //关注
        $toUser = $bothStatus->where(['form_user_id'=>$id])->count();
        //粉丝
        $fans = $bothStatus->where(['to_user_id'=>$id])->count();

        //
        $articleType = (new \app\common\typeCode\Forum())->articleType;

        switch ($cate){
            case 1:
                $data = (new ArticleModel())->where(['type'=>$articleType])
                    ->where(['author_id'=>$id])->paginate(5);
                break;
            case 2:
                $data = $bothStatus->alias('both')
                    ->join('user user','user.id = both.form_user_id and both.to_user_id = '.$id)
                    ->field('user.id,user.avatar_url,user.nickname')
                    ->paginate(5);
                break;
            case 3:
                $data = $bothStatus->alias('both')
                    ->join('user user','user.id = both.to_user_id and both.form_user_id = '.$id)
                    ->field('user.id,user.avatar_url,user.nickname')
                    ->paginate(5);
                break;
        }

        //相关链接
        $about_link = (new ArticleModel())->allowData()->field('id,click,title')
            ->where(['type'=>$this->forum->articleType])
            ->order('id','desc')
            ->limit(5)->select();

        //是否关注了
        if (Session::has(config('app.index_user_session_path'))){
            $is_both = $bothStatus->where(['form_user_id'=>$this->userInfo->id,'to_user_id'=>$id])->find();
        }else{
            $is_both = false;
        }


        $this->assign('user',$user);

        $this->assign('info_cate',$cate);

        $this->assign('data',$data);

        $this->assign('to_user',$toUser);

        $this->assign('fans',$fans);

        $this->assign('about_link',$about_link);

        $this->assign('is_both',$is_both);

        return $this->fetch();

    }

    //评论
    public function comment(Request $request)
    {
        $user = $this->userInfo;

        $post = $request->post();
        $rules = [
            'content'   => 'require|max:300',
            'captcha'   => 'require|captcha',
            'id'        => 'require',
        ];

        $message = [
            'content.require'   => '评论必须填写',
            'content.max'       => '评论最大长度为300个字',
            'captcha.require'   => '验证码必须填写',
            'captcha.captcha'   => '验证码不正确',
            'id.require'        => '请求非法'
        ];

         $validate = new Validate($rules,$message);
        if (!$validate->check($post)){
            return json(['code'=>0,'msg'=>$validate->getError()]);
        }

        $insert = [
            'type'      => 1,
            'public_id' => $post['id'],
            'username'  => $user->nickname,
            'avatar_url'=> $user->avatar_url,
            'comment'   => $post['content'],
            'user_id'   => $user->id,
            'create_time' => time(),
        ];

        (new CommentModel())->insert($insert);

        (new ArticleModel())->where(['id'=>$post['id']])->setInc('comment_sum');

        return json(['code'=>1,'msg'=>'success']);
    }

    //点赞
    public function like(Request $request)
    {
        $id = $request->post('id');
        $historyModel = new HistoryModel();
        $is_exists = $historyModel->where(['type'=>1,'user_id'=>$this->userInfo->id,'object_id'=>$id])
            ->find();
        if ($is_exists) return json(['code'=>0,'msg'=>'您已经点过赞了,无法点赞']);
        $historyModel->insert([
            'type'  => 1,
            'user_id'   => $this->userInfo->id,
            'object_id' => $id,
            'create_time' => time(),
        ]);
        (new ArticleModel())->where(['id'=>$id])->setInc('like_sum');

        return json(['code'=>1,'msg'=>'success']);
    }

    public function uploadContentPic()
    {
        $upload = (new Upload())->uploadOnePic('forum/','file_path');
        $upload = $upload->getData();
        if ($upload['code'] == 1) {
            return json(['success' => true, 'msg' => '图片上传成功', 'file_path' => $upload['msg']]);
        } else {
            return json(['success' => false, 'msg' => $upload['msg'], 'file_path' => '']);
        }
    }
}
